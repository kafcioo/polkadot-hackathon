{"version":3,"sources":["config/index.js","substrate-lib/SubstrateContext.js","substrate-lib/components/DeveloperConsole.js","AccountSelector.js","BlockNumber.js","BlockInfo.js","SearchBlock.js","Metadata.js","NodeInfo.js","App.js","index.js"],"names":["configEnv","require","envVars","reduce","mem","n","undefined","process","slice","config","configCommon","connectedSocket","queryString","parse","window","location","search","rpc","PROVIDER_SOCKET","console","log","INIT_STATE","socket","jsonrpc","RPC","types","CUSTOM_TYPES","keyring","keyringState","api","apiError","apiState","reducer","state","action","type","payload","Error","loadAccts","SubstrateContext","React","createContext","SubstrateContextProvider","props","initState","forEach","key","useReducer","dispatch","provider","WsProvider","_api","ApiPromise","on","isReady","then","err","connect","asyncLoadAccounts","a","web3Enable","APP_NAME","web3Accounts","allAccounts","map","address","meta","name","source","loadAll","isDevelopment","DEVELOPMENT_KEYRING","error","loadAccounts","Provider","value","children","useSubstrate","useContext","DeveloperConsole","util","utilCrypto","Main","Menu","attached","tabular","style","backgroundColor","borderColor","paddingTop","paddingBottom","Container","Image","src","size","position","alignItems","Label","finalized","useState","blockNumber","setBlockNumber","blockNumberTimer","setBlockNumberTimer","bestNumber","derive","chain","bestNumberFinalized","useEffect","unsubscribeAll","number","toNumber","unsub","catch","timer","time","id","setInterval","clearInterval","Grid","Column","Card","Content","textAlign","Statistic","label","extra","Icon","BlockNumber","blockInfo","setBlockInfo","subscribeNewHeads","header","e","getInfo","margin","Table","celled","Header","Row","HeaderCell","Body","Cell","hash","toHuman","parentHash","stateRoot","extrinsicsRoot","BlockInfo","system","getBlock","blockhash","setBlockhash","getBlockInfo","getHeader","Message","info","Form","onSubmit","Group","widths","Input","width","placeholder","onChange","Button","content","BlockInfoBySeach","data","version","metadata","setMetadata","getMetadata","Meta","Modal","trigger","scrolling","Description","JSON","stringify","Metadata","nodeInfo","setNodeInfo","Promise","all","nodeName","nodeVersion","href","NodeInfo","loader","text","Dimmer","active","Loader","centered","columns","padded","negative","compact","floating","contextRef","createRef","ref","Sticky","context","AccountSelector","stackable","stretched","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1675d239.chunk.js","sourcesContent":["import configCommon from './common.json'\n// Using `require` as `import` does not support dynamic loading (yet).\nconst configEnv = require(`./${process.env.NODE_ENV}.json`)\n\n// Accepting React env vars and aggregating them into `config` object.\nconst envVarNames = [\n  'REACT_APP_PROVIDER_SOCKET',\n  'REACT_APP_DEVELOPMENT_KEYRING'\n]\nconst envVars = envVarNames.reduce((mem, n) => {\n  // Remove the `REACT_APP_` prefix\n  if (process.env[n] !== undefined) mem[n.slice(10)] = process.env[n]\n  return mem\n}, {})\n\nconst config = { ...configCommon, ...configEnv, ...envVars }\nexport default config\n","import React, { useReducer, useContext } from 'react'\nimport PropTypes from 'prop-types'\nimport jsonrpc from '@polkadot/types/interfaces/jsonrpc'\nimport queryString from 'query-string'\n\nimport { ApiPromise, WsProvider } from '@polkadot/api'\nimport { web3Accounts, web3Enable } from '@polkadot/extension-dapp'\nimport keyring from '@polkadot/ui-keyring'\n\nimport config from '../config'\n\nconst parsedQuery = queryString.parse(window.location.search)\nconst connectedSocket = parsedQuery.rpc || config.PROVIDER_SOCKET\nconsole.log(`Connected socket: ${connectedSocket}`)\n\n///\n// Initial state for `useReducer`\n\nconst INIT_STATE = {\n  socket: connectedSocket,\n  jsonrpc: { ...jsonrpc, ...config.RPC },\n  types: config.CUSTOM_TYPES,\n  keyring: null,\n  keyringState: null,\n  api: null,\n  apiError: null,\n  apiState: null\n}\n\n///\n// Reducer function for `useReducer`\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'CONNECT_INIT':\n      return { ...state, apiState: 'CONNECT_INIT' }\n\n    case 'CONNECT':\n      return { ...state, api: action.payload, apiState: 'CONNECTING' }\n\n    case 'CONNECT_SUCCESS':\n      return { ...state, apiState: 'READY' }\n\n    case 'CONNECT_ERROR':\n      return { ...state, apiState: 'ERROR', apiError: action.payload }\n\n    case 'LOAD_KEYRING':\n      return { ...state, keyringState: 'LOADING' }\n\n    case 'SET_KEYRING':\n      return { ...state, keyring: action.payload, keyringState: 'READY' }\n\n    case 'KEYRING_ERROR':\n      return { ...state, keyring: null, keyringState: 'ERROR' }\n\n    default:\n      throw new Error(`Unknown type: ${action.type}`)\n  }\n}\n\n///\n// Connecting to the Substrate node\n\nconst connect = (state, dispatch) => {\n  const { apiState, socket, jsonrpc, types } = state\n  // We only want this function to be performed once\n  if (apiState) return\n\n  dispatch({ type: 'CONNECT_INIT' })\n\n  const provider = new WsProvider(socket)\n  const _api = new ApiPromise({ provider, types, rpc: jsonrpc })\n\n  // Set listeners for disconnection and reconnection event.\n  _api.on('connected', () => {\n    dispatch({ type: 'CONNECT', payload: _api })\n    // `ready` event is not emitted upon reconnection and is checked explicitly here.\n    _api.isReady.then((_api) => dispatch({ type: 'CONNECT_SUCCESS' }))\n  })\n  _api.on('ready', () => dispatch({ type: 'CONNECT_SUCCESS' }))\n  _api.on('error', err => dispatch({ type: 'CONNECT_ERROR', payload: err }))\n}\n\n///\n// Loading accounts from dev and polkadot-js extension\n\nlet loadAccts = false\nconst loadAccounts = (state, dispatch) => {\n  const asyncLoadAccounts = async () => {\n    dispatch({ type: 'LOAD_KEYRING' })\n    try {\n      await web3Enable(config.APP_NAME)\n      let allAccounts = await web3Accounts()\n      allAccounts = allAccounts.map(({ address, meta }) =>\n        ({ address, meta: { ...meta, name: `${meta.name} (${meta.source})` } }))\n      keyring.loadAll({ isDevelopment: config.DEVELOPMENT_KEYRING }, allAccounts)\n      dispatch({ type: 'SET_KEYRING', payload: keyring })\n    } catch (e) {\n      console.error(e)\n      dispatch({ type: 'KEYRING_ERROR' })\n    }\n  }\n\n  const { keyringState } = state\n  // If `keyringState` is not null `asyncLoadAccounts` is running.\n  if (keyringState) return\n  // If `loadAccts` is true, the `asyncLoadAccounts` has been run once.\n  if (loadAccts) return dispatch({ type: 'SET_KEYRING', payload: keyring })\n\n  // This is the heavy duty work\n  loadAccts = true\n  asyncLoadAccounts()\n}\n\nconst SubstrateContext = React.createContext()\n\nconst SubstrateContextProvider = (props) => {\n  // filtering props and merge with default param value\n  const initState = { ...INIT_STATE }\n  const neededPropNames = ['socket', 'types']\n  neededPropNames.forEach(key => {\n    initState[key] = (typeof props[key] === 'undefined' ? initState[key] : props[key])\n  })\n\n  const [state, dispatch] = useReducer(reducer, initState)\n  connect(state, dispatch)\n  loadAccounts(state, dispatch)\n\n  return <SubstrateContext.Provider value={state}>\n    {props.children}\n  </SubstrateContext.Provider>\n}\n\n// prop typechecking\nSubstrateContextProvider.propTypes = {\n  socket: PropTypes.string,\n  types: PropTypes.object\n}\n\nconst useSubstrate = () => ({ ...useContext(SubstrateContext) })\n\nexport { SubstrateContextProvider, useSubstrate }\n","// This component will simply add utility functions to your developer console.\nimport { useSubstrate } from '..'\n\nexport default function DeveloperConsole (props) {\n  const { api, apiState, keyring, keyringState } = useSubstrate()\n  if (apiState === 'READY') { window.api = api }\n  if (keyringState === 'READY') { window.keyring = keyring }\n  window.util = require('@polkadot/util')\n  window.utilCrypto = require('@polkadot/util-crypto')\n\n  return null\n}\n","import React from 'react'\nimport { Menu, Container, Image, Label } from 'semantic-ui-react'\n\nconst Main = () => {\n  return (\n    <Menu\n      attached='top'\n      tabular\n      style={{\n        backgroundColor: '#fff',\n        borderColor: '#fff',\n        paddingTop: '1em',\n        paddingBottom: '1em'\n      }}\n    >\n      <Container>\n        <Menu.Menu>\n          <Image\n            src={`${process.env.PUBLIC_URL}/assets/substrate-logo.png`}\n            size='mini'\n          />\n        </Menu.Menu>\n        <Menu.Menu position='right' style={{ alignItems: 'center' }}>\n          <Label> @kafcioo\n          </Label>\n        </Menu.Menu>\n      </Container>\n    </Menu>\n  )\n}\n\nexport default Main\n","import React, { useEffect, useState } from 'react'\nimport { Statistic, Grid, Card, Icon } from 'semantic-ui-react'\n\nimport { useSubstrate } from './substrate-lib'\n\nfunction Main (props) {\n  const { api } = useSubstrate()\n  const { finalized } = props\n  const [blockNumber, setBlockNumber] = useState(0)\n  const [blockNumberTimer, setBlockNumberTimer] = useState(0)\n\n  const bestNumber = finalized\n    ? api.derive.chain.bestNumberFinalized\n    : api.derive.chain.bestNumber\n\n  useEffect(() => {\n    let unsubscribeAll = null\n\n    bestNumber(number => {\n      setBlockNumber(number.toNumber())\n      setBlockNumberTimer(0)\n    })\n      .then(unsub => {\n        unsubscribeAll = unsub\n      })\n      .catch(console.error)\n\n    return () => unsubscribeAll && unsubscribeAll()\n  }, [bestNumber])\n\n  const timer = () => {\n    setBlockNumberTimer(time => time + 1)\n  }\n\n  useEffect(() => {\n    const id = setInterval(timer, 1000)\n    return () => clearInterval(id)\n  }, [])\n\n  return (\n    <Grid.Column>\n      <Card>\n        <Card.Content textAlign='center'>\n          <Statistic\n            label={(finalized ? 'Finalized' : 'Current') + ' Block'}\n            value={blockNumber}\n          />\n        </Card.Content>\n        <Card.Content extra>\n          <Icon name='time' /> {blockNumberTimer}\n        </Card.Content>\n      </Card>\n    </Grid.Column>\n  )\n}\n\nexport default function BlockNumber (props) {\n  const { api } = useSubstrate()\n  return api.derive &&\n    api.derive.chain &&\n    api.derive.chain.bestNumber &&\n    api.derive.chain.bestNumberFinalized ? (\n      <Main {...props} />\n    ) : null\n}\n","import React, { useEffect, useState } from 'react'\nimport { Grid, Label, Table } from 'semantic-ui-react'\n\nimport { useSubstrate } from './substrate-lib'\n\nfunction Main (props) {\n  const { api } = useSubstrate()\n  const [blockInfo, setBlockInfo] = useState()\n\n  useEffect(() => {\n    const unsubscribeAll = null\n    const getInfo = async () => {\n      try {\n        api.rpc.chain.subscribeNewHeads((header) => {\n          setBlockInfo(header)\n        })\n      } catch (e) {\n        console.error(e)\n      }\n    }\n    getInfo()\n    return () => unsubscribeAll && unsubscribeAll()\n  }, [api.derive.chain, api.rpc.chain, blockInfo])\n\n  return (\n    <Grid.Column style={{ margin: '1rem 0' }}>\n      {blockInfo && (\n        <Table celled>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>Info</Table.HeaderCell>\n              <Table.HeaderCell>Data</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n\n          <Table.Body>\n            <Table.Row>\n              <Table.Cell>Block Number</Table.Cell>\n              <Table.Cell>{blockInfo.number.toNumber()}</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>Hash</Table.Cell>\n              <Table.Cell>{blockInfo.hash.toHuman()}</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>ParentHash</Table.Cell>\n              <Table.Cell>{blockInfo.parentHash.toHuman()}</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>State Root</Table.Cell>\n              <Table.Cell>{blockInfo.stateRoot.toHuman()}</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>Extrinsics Root</Table.Cell>\n              <Table.Cell>{blockInfo.extrinsicsRoot.toHuman()}</Table.Cell>\n            </Table.Row>\n          </Table.Body>\n\n          {/* <Table.Footer>Block information with block hash</Table.Footer> */}\n        </Table>\n      )}\n    </Grid.Column>\n  )\n}\n\nexport default function BlockInfo (props) {\n  const { api } = useSubstrate()\n  return api.rpc &&\n    api.rpc.system &&\n    api.rpc.chain &&\n    api.derive.chain &&\n    api.derive.chain.bestNumber &&\n    api.rpc.chain.getBlock &&\n    api.rpc.chain.subscribeNewHeads ? (\n      <Main {...props} />\n    ) : null\n}\n","import React, { useState } from 'react'\nimport { Form, Grid, Label, Table, Icon, Message } from 'semantic-ui-react'\n\nimport { useSubstrate } from './substrate-lib'\n\nfunction Main () {\n  const { api } = useSubstrate()\n  const [blockInfo, setBlockInfo] = useState()\n  const [blockhash, setBlockhash] = useState()\n\n  const getBlockInfo = async (blockhash) => {\n    try {\n      const blockInfo = await api.rpc.chain.getHeader(blockhash)\n\n      setBlockInfo(blockInfo)\n    } catch (e) {\n      console.error(e)\n    }\n  }\n\n  console.log('blockhash', !!blockhash)\n  console.log('block-info', blockInfo && blockInfo.hash.toHuman())\n\n  return (\n    <Grid.Column textAlign = 'center'>\n      <Message info>\n        <p>Find the block</p>\n      </Message>\n      <Form\n        onSubmit={async (e, { value }) => await getBlockInfo(blockhash)}\n        size='small'\n      >\n        <Form.Group widths={12}>\n          <Form.Input\n            size='large'\n            width={10}\n            placeholder={'Enter block to get block information'}\n            onChange={(e, { value }) => setBlockhash(value)}\n          />\n          {blockhash && <Form.Button content={<Icon name='search' />} />}\n        </Form.Group>\n      </Form>\n      {blockInfo && blockInfo.number && (\n        <Table celled>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>Item</Table.HeaderCell>\n              <Table.HeaderCell>Info</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n\n          <Table.Body>\n            <Table.Row>\n              <Table.Cell>Block</Table.Cell>\n              <Table.Cell>{blockInfo.number.toNumber()}</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>ParentHash</Table.Cell>\n              <Table.Cell>{blockInfo.parentHash.toHuman()}</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>State Root</Table.Cell>\n              <Table.Cell>{blockInfo.stateRoot.toHuman()}</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>Extrinsics Root</Table.Cell>\n              <Table.Cell>{blockInfo.extrinsicsRoot.toHuman()}</Table.Cell>\n            </Table.Row>\n          </Table.Body>\n\n          {/* <Table.Footer>Block information with block hash</Table.Footer> */}\n        </Table>\n      )}\n    </Grid.Column>\n  )\n}\n\nexport default function BlockInfoBySeach (props) {\n  const { api } = useSubstrate()\n  return api.rpc && api.rpc.chain.getHeader ? <Main {...props} /> : null\n}\n","import React, { useEffect, useState } from 'react'\nimport { Grid, Modal, Button, Card } from 'semantic-ui-react'\n\nimport { useSubstrate } from './substrate-lib'\n\nfunction Main (props) {\n  const { api } = useSubstrate()\n  const [metadata, setMetadata] = useState({ data: null, version: null })\n\n  useEffect(() => {\n    const getMetadata = async () => {\n      try {\n        const data = await api.rpc.state.getMetadata()\n        setMetadata({ data, version: data.version })\n      } catch (e) {\n        console.error(e)\n      }\n    }\n    getMetadata()\n  }, [api.rpc.state])\n\n  return (\n    <Grid.Column>\n      <Card>\n        <Card.Content>\n          <Card.Header>Metadata</Card.Header>\n          <Card.Meta>\n            <span>v{metadata.version}</span>\n          </Card.Meta>\n        </Card.Content>\n        <Card.Content extra>\n          <Modal trigger={<Button>Show Metadata</Button>}>\n            <Modal.Header>Runtime Metadata</Modal.Header>\n            <Modal.Content scrolling>\n              <Modal.Description>\n                <pre>\n                  <code>{JSON.stringify(metadata.data, null, 2)}</code>\n                </pre>\n              </Modal.Description>\n            </Modal.Content>\n          </Modal>\n        </Card.Content>\n      </Card>\n    </Grid.Column>\n  )\n}\n\nexport default function Metadata (props) {\n  const { api } = useSubstrate()\n  return api.rpc && api.rpc.state && api.rpc.state.getMetadata ? (\n    <Main {...props} />\n  ) : null\n}\n","import React, { useEffect, useState } from 'react'\nimport { Card, Icon, Grid } from 'semantic-ui-react'\n\nimport { useSubstrate } from './substrate-lib'\n\nfunction Main (props) {\n  const { api } = useSubstrate()\n  const [nodeInfo, setNodeInfo] = useState({})\n\n  useEffect(() => {\n    const getInfo = async () => {\n      try {\n        const [chain, nodeName, nodeVersion] = await Promise.all([\n          api.rpc.system.chain(),\n          api.rpc.system.name(),\n          api.rpc.system.version()\n        ])\n        setNodeInfo({ chain, nodeName, nodeVersion })\n      } catch (e) {\n        console.error(e)\n      }\n    }\n    getInfo()\n  }, [api.rpc.system])\n\n  return (\n    <Grid.Column>\n      <Card>\n        <Card.Content>\n          <Card.Header>{nodeInfo.nodeName}</Card.Header>\n          <Card.Meta>\n            <span>{nodeInfo.chain}</span>\n          </Card.Meta>\n          <Card.Description>\n            Built using the\n            <a href='https://github.com/substrate-developer-hub/substrate-front-end-template'>\n              Substrate Front End Template\n            </a>\n          </Card.Description>\n        </Card.Content>\n        <Card.Content extra>\n          <Icon name='setting' />v{nodeInfo.nodeVersion}\n        </Card.Content>\n      </Card>\n    </Grid.Column>\n  )\n}\n\nexport default function NodeInfo (props) {\n  const { api } = useSubstrate()\n  return api.rpc &&\n    api.rpc.system &&\n    api.rpc.system.chain &&\n    api.rpc.system.name &&\n    api.rpc.system.version ? (\n      <Main {...props} />\n    ) : null\n}\n","import React, { createRef } from 'react'\nimport {\n  Container,\n  Dimmer,\n  Loader,\n  Grid,\n  Sticky,\n  Message\n} from 'semantic-ui-react'\nimport 'semantic-ui-css/semantic.min.css'\n\nimport { SubstrateContextProvider, useSubstrate } from './substrate-lib'\nimport { DeveloperConsole } from './substrate-lib/components'\n\nimport AccountSelector from './AccountSelector'\nimport BlockNumber from './BlockNumber'\nimport BlockInfo from './BlockInfo'\nimport BlockInfoBySeach from './SearchBlock'\nimport Metadata from './Metadata'\nimport NodeInfo from './NodeInfo'\n\nexport const Main = () => {\n  const { apiState, keyringState, apiError } = useSubstrate()\n\n  const loader = (text) => (\n    <Dimmer active>\n      <Loader size='small'>{text}</Loader>\n    </Dimmer>\n  )\n\n  const message = (err) => (\n    <Grid centered columns={2} padded>\n      <Grid.Column>\n        <Message\n          negative\n          compact\n          floating\n          header='Error Connecting to Substrate'\n          content={`${err}`}\n        />\n      </Grid.Column>\n    </Grid>\n  )\n\n  if (apiState === 'ERROR') return message(apiError)\n  else if (apiState !== 'READY') return loader('Connecting to Substrate')\n\n  if (keyringState !== 'READY') {\n    return loader(\n      \"Loading accounts (please review any extension's authorization)\"\n    )\n  }\n\n  const contextRef = createRef()\n\n  return (\n    <div ref={contextRef}>\n      <Sticky context={contextRef}>\n        <AccountSelector />\n      </Sticky>\n      <Container>\n        <Grid stackable columns='equal'>\n          <Grid.Row stretched>\n            <NodeInfo />\n            <Metadata />\n            <BlockNumber />\n            <BlockNumber finalized />\n          </Grid.Row>\n          <Grid.Row stretched>\n            <BlockInfo />\n          </Grid.Row>\n          <Grid.Row stretched>\n            <BlockInfoBySeach />\n          </Grid.Row>\n        </Grid>\n      </Container>\n      <DeveloperConsole />\n    </div>\n  )\n}\n\nexport const App = () => {\n  return (\n    <SubstrateContextProvider>\n      <Main />\n    </SubstrateContextProvider>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\n\nReactDOM.render(<App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}